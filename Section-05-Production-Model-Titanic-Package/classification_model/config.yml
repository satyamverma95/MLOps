# Package Overview
package_name: classification_model

# Data Files
training_data_file: train.csv
test_data_file: test.csv
raw_data_file : raw_data.csv

# Variables
# The variable we are attempting to predict (sale price)
target: survived

pipeline_name: classification_model
pipeline_save_file: classification_model_output_v

# Will cause syntax errors since they begin with numbers
# nested dictionary
#Old_Name : New_Name
#variables_to_rename:
#  Nothing to rename as of now.



# Intendention matters in yml and here a key with intended dash is the list 
features:
  - pclass #No NA  
  - sex   #No NA
  - age    #Has NA
  - sibsp  #NO NA
  - parch  # No NA
  - fare #No NA
  - cabin #Has NA
  - embarked #Has N



#['pclass', 'age', 'sibsp', 'parch', 'fare'] - Numerical
#['sex', 'cabin', 'embarked', 'title'] - Categorical


# set train/test split
test_size: 0.1

# to set the random seed
random_state: 2

alpha: 0.001

# categorical variables with NA in train set, NA was already mentioend in the dataset.
categorical_vars_with_na_frequent:
  - cabin
  - embarked

categorical_vars_with_na_missing:
  - sex
  - embarked

#What is this variable is meant for ?
#categorical_vars_with_na_missing:
# - Sex
# - Embarked
numerical_vars:
  - age
  - fare

numerical_vars_with_na:
  - age


# variables to log transform
numericals_log_vars:
  - fare
  - age
  - sibsp
  - parch

# variables to map
one_hot_encoding_vars:
  - sex

cabin_vars:
  - cabin

name_vars:
  - name

new_feature:
  - title

unused_vars:
  - name
  - ticket
  - boat 
  - body
  - home.dest

categorical_vars:
  - sex
  - cabin
  - embarked
  - title  

# variable mappings
#If you want to convert categorical value to Numerical value we use this mapping. Unioun of all categorical values 
#mentioned in the quals_vars and put them in qual_mappings with numeric values.




